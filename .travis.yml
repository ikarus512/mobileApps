# Travis CI file

# https://docs.travis-ci.com/user/languages/javascript-with-nodejs



env:
  global:
    - CORDOVA_VERSION=9
    - CORDOVA_ANDROID_PLATFORM=8
    #- ANDROID_API_LEVEL=28   ANDROID_BUILD_TOOLS_VERSION=28.0.3
    - ANDROID_API_LEVEL=29   ANDROID_BUILD_TOOLS_VERSION=29.0.2
    - TERM=dumb # Keep gradle from crapping all over the log
    - nodejs_version=12 #8

language: android
jdk: oraclejdk8
node_js: "8"
android:
  components:
    - tools
    - platform-tools
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
    - android-$ANDROID_API_LEVEL

sudo: required
dist: trusty # ubuntu trusty=14.04, xenial=16.04 (default), bionic=18.04


### TODO: sign osx application
### TODO: sign win application
### TODO: build/sign learnLang-ios
### TODO: get version numbers from main package.json to installation info (or create from tags or???)
matrix:
  include:
    #- os: osx
    #  #osx_image: xcode7.3 8.3 9.4 10
    #  osx_image: xcode7.3
    #  env: JB=010 TOS=ios       APP=learnLang FRM=cordova OPT2=Small     DEBUGV=yes
    ### btCtl: #####################
    - os: linux
      env: JB=020 TOS=android   APP=btCtl FRM=cordova
    - os: linux
      env: JB=030 TOS=android   APP=btCtl FRM=cordova DEBUGV=yes
    ## ### learnLang: #####################
    ## - os: linux
    ##   env: JB=040 TOS=android   APP=learnLang FRM=cordova OPT2=Small
    ## #- os: linux
    ## #  env: JB=050 TOS=android   APP=learnLang FRM=cordova OPT2=Small    DEBUGV=yes
    - os: linux
      env: JB=060 TOS=android   APP=learnLang FRM=cordova
    ##- os: linux
    ##  env: JB=070 TOS=android   APP=learnLang FRM=cordova               DEBUGV=yes
    ## - os: linux
    ##   env: JB=080 TOS=linux-win APP=learnLang FRM=nwjs
    ## #- os: linux
    ## #  env: JB=090 TOS=linux-win APP=learnLang FRM=nwjs                  DEBUGV=yes
    ## - os: osx
    ##   env: JB=100 TOS=osx       APP=learnLang FRM=nwjs
    ## #-os: osx
    ## # env: JB=110 TOS=osx       APP=learnLang FRM=nwjs                  DEBUGV=yes
    ## ### puzzle15: ######################
    - os: linux
      env: JB=120 TOS=android   APP=puzzle15  FRM=cordova-ionic
    ## #-os: linux
    ## # env: JB=130 TOS=android   APP=puzzle15  FRM=cordova-ionic         DEBUGV=yes
    ## #-os: linux
    ## # env: JB=140 TOS=linux-win APP=puzzle15  FRM=nwjs-ionic
    ## #-os: linux
    ## # env: JB=150 TOS=linux-win APP=puzzle15  FRM=nwjs-ionic            DEBUGV=yes
    ## #-os: linux
    ## # env: JB=160 TOS=osx       APP=puzzle15  FRM=nwjs-ionic
    ## #-os: linux
    ## # env: JB=170 TOS=osx       APP=puzzle15  FRM=nwjs-ionic            DEBUGV=yes
    ## ### tripSave: ######################
    ## #-os: linux
    ## # env: JB=180 TOS=android   APP=tripSave  FRM=nwjs
    ## #-os: linux
    ## # env: JB=190 TOS=android   APP=tripSave  FRM=nwjs                  DEBUGV=yes
    ## #-os: linux
    ## # env: JB=200 TOS=linux-win APP=tripSave  FRM=nwjs
    ## #-os: linux
    ## # env: JB=210 TOS=linux-win APP=tripSave  FRM=nwjs                  DEBUGV=yes
    ## #-os: linux
    ## # env: JB=220 TOS=osx       APP=tripSave  FRM=nwjs
    ## #-os: linux
    ## # env: JB=230 TOS=osx       APP=tripSave  FRM=nwjs                  DEBUGV=yes

branches:
    only:
        - master
    except: # tags starting with vX.X.X (usually commited by travis)
        - /^v?\d+\.\d+\.\d+/

git:
    depth: 20

# cache: ### caching can be slower than not caching (if many folders)
#     timeout: 300 # (5*60 s = 5 min)
#     directories:
#     - $NVM_DIR # $(npm config get prefix)
#     - _tmp_cached/android-sdk-linux
#     - apps/$APP/node_modules
#     - apps/$APP/platforms
#     - apps/$APP/plugins


before_install:
  - nvm install $nodejs_version
  - node --version
  - npm --version
  - gradle --version
  - sdkmanager --version
  - $ANDROID_HOME/tools/bin/sdkmanager --version
  - $ANDROID_SDK_ROOT/tools/bin/sdkmanager --version
  - ls $ANDROID_SDK_ROOT/build-tools
  - $ANDROID_SDK_ROOT/build-tools/zipalign --version
  #- npm i -g cordova
  #- cordova --version
  #- cordova platform --version

before_script:
    - export LOCAL_RUN=no
    - export APPNAME=$APP$OPT2
    - export TARGET_OS=$TOS
    - export WORK_DIR=$PWD
    - export APPL_DIR=$WORK_DIR/apps/$APP
    - export RELEASES_DIR=$WORK_DIR/releases
    - export CLONE_DIR=$WORK_DIR/_tmp/mobileApps
    #-export  CXX=g++-4.8 #needed for android???
    - export  ANDROID_MANIFEST=$APPL_DIR/platforms/android/AndroidManifest.xml
    ##- export  ANDROID_HOME1=$WORK_DIR/_tmp_cached
    ##- export  ANDROID_HOME=$WORK_DIR/_tmp_cached/android-sdk-linux
    ##- export  ABTVM=25 ABTVF=25.0.2
    - export  ZIPALIGN=$ANDROID_HOME/build-tools/$ABTVF/zipalign
    # iOS specific:
    - export IOS_PROFILE_NAME=learnLang
    - export IOS_PROVISIONING_PROFILE_UUID=fd6fa7e8-2fd6-46cc-8526-51d6de5c4cc2
    - export IOS_DEVELOPER_NAME=iPhone\ Distribution\:\ ikarus512@yandex.ru\ \(3UX5BEB7M2\)

    - . $WORK_DIR/scripts/_mydo.sh
    #- . $WORK_DIR/scripts/common_before_install.sh
    - . $APPL_DIR/scripts/before_install.sh
    - . $APPL_DIR/scripts/copy.sh
    - . $APPL_DIR/scripts/install.sh
    - cordova --version
    - cordova platform --version
    - . $APPL_DIR/scripts/build.sh

script:
    - ls -lh $RELEASES_DIR || echo 1

after_success:
    - . $WORK_DIR/scripts/deploy_github_releases.sh
    ### - . $WORK_DIR/scripts/deploy_heroku.sh
